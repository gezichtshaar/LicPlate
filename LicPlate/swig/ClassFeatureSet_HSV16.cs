/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class ClassFeatureSet_HSV16 : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ClassFeatureSet_HSV16(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(ClassFeatureSet_HSV16 obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ClassFeatureSet_HSV16() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          VisionLabPINVOKE.delete_ClassFeatureSet_HSV16(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public ClassFeatureSet_HSV16() : this(VisionLabPINVOKE.new_ClassFeatureSet_HSV16__SWIG_0(), true) {
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
  }

  public ClassFeatureSet_HSV16(string info) : this(VisionLabPINVOKE.new_ClassFeatureSet_HSV16__SWIG_1(info), true) {
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual string GetImageType() {
    string ret = VisionLabPINVOKE.ClassFeatureSet_HSV16_GetImageType(swigCPtr);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int AddClass(string className) {
    int ret = VisionLabPINVOKE.ClassFeatureSet_HSV16_AddClass(swigCPtr, className);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int ClassId(string className) {
    int ret = VisionLabPINVOKE.ClassFeatureSet_HSV16_ClassId(swigCPtr, className);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string ClassName(int classId) {
    string ret = VisionLabPINVOKE.ClassFeatureSet_HSV16_ClassName(swigCPtr, classId);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_std__mapT_std__string_int_t GetClassTab() {
    SWIGTYPE_p_std__mapT_std__string_int_t ret = new SWIGTYPE_p_std__mapT_std__string_int_t(VisionLabPINVOKE.ClassFeatureSet_HSV16_GetClassTab(swigCPtr), false);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int MaxClassId() {
    int ret = VisionLabPINVOKE.ClassFeatureSet_HSV16_MaxClassId(swigCPtr);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void RemoveClass(string className) {
    VisionLabPINVOKE.ClassFeatureSet_HSV16_RemoveClass(swigCPtr, className);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
  }

  public int AddImage(string className, HSV161616Image image) {
    int ret = VisionLabPINVOKE.ClassFeatureSet_HSV16_AddImage(swigCPtr, className, HSV161616Image.getCPtr(image));
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public HSV161616Image GetImage(string className, int imageIndex) {
    HSV161616Image ret = new HSV161616Image(VisionLabPINVOKE.ClassFeatureSet_HSV16_GetImage(swigCPtr, className, imageIndex), false);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void GetClassIds(vector_int classIds) {
    VisionLabPINVOKE.ClassFeatureSet_HSV16_GetClassIds(swigCPtr, vector_int.getCPtr(classIds));
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
  }

  public int NrOfImages(string className) {
    int ret = VisionLabPINVOKE.ClassFeatureSet_HSV16_NrOfImages(swigCPtr, className);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void RemoveImage(string className, int imageIndex) {
    VisionLabPINVOKE.ClassFeatureSet_HSV16_RemoveImage(swigCPtr, className, imageIndex);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
  }

  public int AddFeature(string featureName) {
    int ret = VisionLabPINVOKE.ClassFeatureSet_HSV16_AddFeature(swigCPtr, featureName);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int FeatureId(string featureName) {
    int ret = VisionLabPINVOKE.ClassFeatureSet_HSV16_FeatureId(swigCPtr, featureName);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string FeatureName(int featureId) {
    string ret = VisionLabPINVOKE.ClassFeatureSet_HSV16_FeatureName(swigCPtr, featureId);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_std__mapT_std__string_int_t GetFeatureNameTab() {
    SWIGTYPE_p_std__mapT_std__string_int_t ret = new SWIGTYPE_p_std__mapT_std__string_int_t(VisionLabPINVOKE.ClassFeatureSet_HSV16_GetFeatureNameTab(swigCPtr), false);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void RemoveFeature(string featureName) {
    VisionLabPINVOKE.ClassFeatureSet_HSV16_RemoveFeature(swigCPtr, featureName);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
  }

  public int GetNrFeatures() {
    int ret = VisionLabPINVOKE.ClassFeatureSet_HSV16_GetNrFeatures(swigCPtr);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public vector_double GetFeaturesImage(string className, int imageIndex) {
    vector_double ret = new vector_double(VisionLabPINVOKE.ClassFeatureSet_HSV16_GetFeaturesImage(swigCPtr, className, imageIndex), true);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetFeaturesImage(string className, int imageIndex, vector_double f) {
    VisionLabPINVOKE.ClassFeatureSet_HSV16_SetFeaturesImage(swigCPtr, className, imageIndex, vector_double.getCPtr(f));
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
  }

  public void GetSet(vector_vector_double features, vector_int classIds) {
    VisionLabPINVOKE.ClassFeatureSet_HSV16_GetSet(swigCPtr, vector_vector_double.getCPtr(features), vector_int.getCPtr(classIds));
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool SelectFeature(string featureName, bool selected) {
    bool ret = VisionLabPINVOKE.ClassFeatureSet_HSV16_SelectFeature(swigCPtr, featureName, selected);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int GetNrSelectedFeatures() {
    int ret = VisionLabPINVOKE.ClassFeatureSet_HSV16_GetNrSelectedFeatures(swigCPtr);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public vector_bool GetSelectTab() {
    vector_bool ret = new vector_bool(VisionLabPINVOKE.ClassFeatureSet_HSV16_GetSelectTab(swigCPtr), true);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetSelectTab(vector_bool tab) {
    VisionLabPINVOKE.ClassFeatureSet_HSV16_SetSelectTab(swigCPtr, vector_bool.getCPtr(tab));
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
  }

  public vector_double GetSelectedFeaturesImage(string className, int imageIndex) {
    vector_double ret = new vector_double(VisionLabPINVOKE.ClassFeatureSet_HSV16_GetSelectedFeaturesImage(swigCPtr, className, imageIndex), true);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void GetSelectedSet(vector_vector_double features, vector_int classIds) {
    VisionLabPINVOKE.ClassFeatureSet_HSV16_GetSelectedSet(swigCPtr, vector_vector_double.getCPtr(features), vector_int.getCPtr(classIds));
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
  }

  public vector_double GetSelectedFeatures(vector_double features) {
    vector_double ret = new vector_double(VisionLabPINVOKE.ClassFeatureSet_HSV16_GetSelectedFeatures(swigCPtr, vector_double.getCPtr(features)), true);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public vector_MinMaxInput GetMinMaxTab() {
    vector_MinMaxInput ret = new vector_MinMaxInput(VisionLabPINVOKE.ClassFeatureSet_HSV16_GetMinMaxTab(swigCPtr), false);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public vector_MinMaxInput GetSelectedMinMaxTab() {
    vector_MinMaxInput ret = new vector_MinMaxInput(VisionLabPINVOKE.ClassFeatureSet_HSV16_GetSelectedMinMaxTab(swigCPtr), true);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetMinMaxTab(vector_MinMaxInput minMaxTab) {
    VisionLabPINVOKE.ClassFeatureSet_HSV16_SetMinMaxTab(swigCPtr, vector_MinMaxInput.getCPtr(minMaxTab));
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
  }

  public void CalcMinMaxTab() {
    VisionLabPINVOKE.ClassFeatureSet_HSV16_CalcMinMaxTab(swigCPtr);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
  }

  public void ResetMinMaxTab() {
    VisionLabPINVOKE.ClassFeatureSet_HSV16_ResetMinMaxTab(swigCPtr);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
  }

  public string GetInfo() {
    string ret = VisionLabPINVOKE.ClassFeatureSet_HSV16_GetInfo(swigCPtr);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetScriptName(SWIGTYPE_p_QString name) {
    VisionLabPINVOKE.ClassFeatureSet_HSV16_SetScriptName(swigCPtr, SWIGTYPE_p_QString.getCPtr(name));
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_QString GetScriptName() {
    SWIGTYPE_p_QString ret = new SWIGTYPE_p_QString(VisionLabPINVOKE.ClassFeatureSet_HSV16_GetScriptName(swigCPtr), true);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void WriteToFile(string fileName) {
    VisionLabPINVOKE.ClassFeatureSet_HSV16_WriteToFile(swigCPtr, fileName);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
  }

  public void ReadFromFile(string fileName) {
    VisionLabPINVOKE.ClassFeatureSet_HSV16_ReadFromFile(swigCPtr, fileName);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
  }

  public void WriteToStream(SWIGTYPE_p_std__ostream os) {
    VisionLabPINVOKE.ClassFeatureSet_HSV16_WriteToStream(swigCPtr, SWIGTYPE_p_std__ostream.getCPtr(os));
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
  }

  public void ReadFromStream(SWIGTYPE_p_std__istream arg0) {
    VisionLabPINVOKE.ClassFeatureSet_HSV16_ReadFromStream(swigCPtr, SWIGTYPE_p_std__istream.getCPtr(arg0));
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_QString info {
    set {
      VisionLabPINVOKE.ClassFeatureSet_HSV16_info_set(swigCPtr, SWIGTYPE_p_QString.getCPtr(value));
      if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_QString ret = new SWIGTYPE_p_QString(VisionLabPINVOKE.ClassFeatureSet_HSV16_info_get(swigCPtr), true);
      if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_QString scriptName {
    set {
      VisionLabPINVOKE.ClassFeatureSet_HSV16_scriptName_set(swigCPtr, SWIGTYPE_p_QString.getCPtr(value));
      if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_QString ret = new SWIGTYPE_p_QString(VisionLabPINVOKE.ClassFeatureSet_HSV16_scriptName_get(swigCPtr), true);
      if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_std__mapT_std__string_int_t classTab {
    set {
      VisionLabPINVOKE.ClassFeatureSet_HSV16_classTab_set(swigCPtr, SWIGTYPE_p_std__mapT_std__string_int_t.getCPtr(value));
      if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = VisionLabPINVOKE.ClassFeatureSet_HSV16_classTab_get(swigCPtr);
      SWIGTYPE_p_std__mapT_std__string_int_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_std__mapT_std__string_int_t(cPtr, false);
      if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_std__mapT_std__string_int_t featureNameTab {
    set {
      VisionLabPINVOKE.ClassFeatureSet_HSV16_featureNameTab_set(swigCPtr, SWIGTYPE_p_std__mapT_std__string_int_t.getCPtr(value));
      if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = VisionLabPINVOKE.ClassFeatureSet_HSV16_featureNameTab_get(swigCPtr);
      SWIGTYPE_p_std__mapT_std__string_int_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_std__mapT_std__string_int_t(cPtr, false);
      if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public vector_vector_HSV161616Image imageTab {
    set {
      VisionLabPINVOKE.ClassFeatureSet_HSV16_imageTab_set(swigCPtr, vector_vector_HSV161616Image.getCPtr(value));
      if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = VisionLabPINVOKE.ClassFeatureSet_HSV16_imageTab_get(swigCPtr);
      vector_vector_HSV161616Image ret = (cPtr == IntPtr.Zero) ? null : new vector_vector_HSV161616Image(cPtr, false);
      if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public vector_vector_vector_double featureTab {
    set {
      VisionLabPINVOKE.ClassFeatureSet_HSV16_featureTab_set(swigCPtr, vector_vector_vector_double.getCPtr(value));
      if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = VisionLabPINVOKE.ClassFeatureSet_HSV16_featureTab_get(swigCPtr);
      vector_vector_vector_double ret = (cPtr == IntPtr.Zero) ? null : new vector_vector_vector_double(cPtr, false);
      if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public vector_bool selectTab {
    set {
      VisionLabPINVOKE.ClassFeatureSet_HSV16_selectTab_set(swigCPtr, vector_bool.getCPtr(value));
      if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = VisionLabPINVOKE.ClassFeatureSet_HSV16_selectTab_get(swigCPtr);
      vector_bool ret = (cPtr == IntPtr.Zero) ? null : new vector_bool(cPtr, false);
      if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public vector_MinMaxInput minMaxTab {
    set {
      VisionLabPINVOKE.ClassFeatureSet_HSV16_minMaxTab_set(swigCPtr, vector_MinMaxInput.getCPtr(value));
      if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = VisionLabPINVOKE.ClassFeatureSet_HSV16_minMaxTab_get(swigCPtr);
      vector_MinMaxInput ret = (cPtr == IntPtr.Zero) ? null : new vector_MinMaxInput(cPtr, false);
      if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public void Init(string info) {
    VisionLabPINVOKE.ClassFeatureSet_HSV16_Init(swigCPtr, info);
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
  }

}
