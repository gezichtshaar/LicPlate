// rectify_plate.jls    
// Rectifies (Warp + Rotate + Threshold) the plate
// July 2012
// Jaap van de Loosdrecht and Klaas Dijkstra
// Input %currentimage: Original image 
// Input %secondimage: Binary image containing the plate as the biggest blob 
// Output: Rectified binary image containing the text of the plate
// Result: true if warp was successful, false otherwise

$ServerScript = IsServerScript
if $ServerScript === false
  //copy script selected image (F6) and second selected image (F5)
  copy %currentimage OriginalImage
  copy %secondimage LicensePlateBin
else
  //Copy first and second image passed by C#
  copy %p1 OriginalImage
  copy %p2 LicensePlateBin
endif

//Find corner points of the licenseplate
$found = FindCornersRectangle LicensePlateBin EightConnected 0.5 Landscape &$tab
if $found then
  //Warp (rectify) licenseplate
  Warp OriginalImage BinaryCharacterImage ForwardT $tab[0] $tab[1] $tab[2] $tab[3] 100 470 0 NearestPixelInterpolation
  
  //**********************************************//
  //*** Exercise: Find license plate characters **//
  //**********************************************//  
  Convert BinaryCharacterImage BinaryCharacterImage Int32Image
  //Automatic threshold finds black letters
  ThresholdIsodata BinaryCharacterImage DarkObject  
  //Remove small blobs + noise
  Opening BinaryCharacterImage BinaryCharacterImage 5 1 0 2 1 1 1 1 1 
  //Remove all blobs connected to the border
  RemoveborderBlobs BinaryCharacterImage EightConnected AllBorders
  //Remove all blobs with an area less than 400
  RemoveBlobs BinaryCharacterImage EightConnected Area 1 400 UseX
  
  if $ServerScript === false
    display BinaryCharacterImage
  else
    //Copy result image back to C#
    copy BinaryCharacterImage %p3
  endif
  return true
else
  return false
endif

